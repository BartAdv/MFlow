TField "PreventGoingBack.hstop" "<h1>Controlling backtracking</h1><div><span style=\"color: rgb(34, 34, 34); font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px; background-color: rgb(255, 255, 255);\">sometimes it is dangerous to go back in the flow, &nbsp;when a transaction that can not be undone has been done. For example a payment. For this purpose, it is necessary a cut in backtracking.&nbsp;</span></div><div><br style=\"color: rgb(34, 34, 34); font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(34, 34, 34); font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px; background-color: rgb(255, 255, 255);\">&nbsp;I added&nbsp;</span><em style=\"color: rgb(34, 34, 34); font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px; background-color: rgb(255, 255, 255);\">preventGoingBack</em><span style=\"color: rgb(34, 34, 34); font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px; background-color: rgb(255, 255, 255);\">. It perform this cut in&nbsp;backtracking when going back in the flow. When&nbsp;this condition is detected,&nbsp;ir&nbsp;executes the parameter, that is a subflow . Usually&nbsp;this subflow consist of a single&nbsp;ask statement that present a single page with an error. When going forward, the statement is transparent.</span></div><div><span style=\"color: rgb(34, 34, 34); font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px; background-color: rgb(255, 255, 255);\"><br></span></div><div><a name=\"v:preventGoingBack\" class=\"def\" style=\"margin: 0px; padding: 0px; font-weight: bold; font-family: monospace; font-size: 12.727272033691406px; line-height: 15.454545021057129px;\">preventGoingBack</a><span style=\"font-family: monospace; font-size: 12.727272033691406px; line-height: 15.454545021057129px; background-color: rgb(240, 240, 240);\">&nbsp;:: (</span><a href=\"http://hackage.haskell.org/packages/archive/base/4.6.0.1/doc/html/Control-Monad.html#t:Functor\" style=\"margin: 0px; padding: 0px; text-decoration: none; color: rgb(171, 105, 84); font-family: monospace; font-size: 12.727272033691406px; line-height: 15.454545021057129px;\">Functor</a><span style=\"font-family: monospace; font-size: 12.727272033691406px; line-height: 15.454545021057129px; background-color: rgb(240, 240, 240);\">&nbsp;m,&nbsp;</span><a href=\"http://hackage.haskell.org/packages/archive/transformers/0.3.0.0/doc/html/Control-Monad-IO-Class.html#t:MonadIO\" style=\"margin: 0px; padding: 0px; text-decoration: none; color: rgb(171, 105, 84); font-family: monospace; font-size: 12.727272033691406px; line-height: 15.454545021057129px;\">MonadIO</a><span style=\"font-family: monospace; font-size: 12.727272033691406px; line-height: 15.454545021057129px; background-color: rgb(240, 240, 240);\">&nbsp;m,&nbsp;</span><a href=\"http://hackage.haskell.org/package/MFlow-0.3.1.1/docs/MFlow-Forms.html#t:FormInput\" style=\"margin: 0px; padding: 0px; text-decoration: none; color: rgb(171, 105, 84); font-family: monospace; font-size: 12.727272033691406px; line-height: 15.454545021057129px;\">FormInput</a><span style=\"font-family: monospace; font-size: 12.727272033691406px; line-height: 15.454545021057129px; background-color: rgb(240, 240, 240);\">&nbsp;v) =&gt;&nbsp;</span><a href=\"http://hackage.haskell.org/package/MFlow-0.3.1.1/docs/MFlow-Forms.html#t:FlowM\" style=\"margin: 0px; padding: 0px; text-decoration: none; color: rgb(171, 105, 84); font-family: monospace; font-size: 12.727272033691406px; line-height: 15.454545021057129px;\">FlowM</a><span style=\"font-family: monospace; font-size: 12.727272033691406px; line-height: 15.454545021057129px; background-color: rgb(240, 240, 240);\">&nbsp;v m () -&gt;&nbsp;</span><a href=\"http://hackage.haskell.org/package/MFlow-0.3.1.1/docs/MFlow-Forms.html#t:FlowM\" style=\"margin: 0px; padding: 0px; text-decoration: none; color: rgb(171, 105, 84); font-family: monospace; font-size: 12.727272033691406px; line-height: 15.454545021057129px;\">FlowM</a><span style=\"font-family: monospace; font-size: 12.727272033691406px; line-height: 15.454545021057129px; background-color: rgb(240, 240, 240);\">&nbsp;v m ()</span><span style=\"color: rgb(34, 34, 34); font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px; background-color: rgb(255, 255, 255);\"><br></span></div><div><span style=\"color: rgb(34, 34, 34); font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px; background-color: rgb(255, 255, 255);\"><br></span><span style=\"color: rgb(34, 34, 34); font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18px; background-color: rgb(255, 255, 255);\">Here preventGoingBack does not permit to navigate back to code before himself. The user can go back in the browser, but what the user will see when he press a button or link in the flow, is the message of preventGoingBack and their available&nbsp;options. After that, the flow will continue normally.</span><br></div>"